import poja.sed as sed
import os


def set_sqlite(with_database, temp, exclude):
    if with_database == "sqlite":
        efs_mount_point = "/mnt/efs"
        sqlite_env_vars = f"""DRIVERCLASSNAME: org.sqlite.JDBC
        SPRING_JPA_DATABASEPLATFORM: org.hibernate.community.dialect.SQLiteDialect
        SPRING_DATASOURCE_URL: jdbc:sqlite:{efs_mount_point}/sqlite-data:db?cache=shared
        SPRING_DATASOURCE_USERNAME: sa
        SPRING_DATASOURCE_PASSWORD: sa"""
        sqlite_configure_it_properties = (
            "new SqliteConf().configureProperties(registry);"
        )
        function_fs_configs = (
            """FileSystemConfigs:
        - Arn: !Sub '{{resolve:ssm:/<?app-name>/${Env}/efs/access-point/arn}}'
          LocalMountPath: %s"""
            % efs_mount_point
        )
    else:
        sqlite_env_vars = ""
        sqlite_configure_it_properties = ""
        os.remove(temp + "/.github/workflows/cd-storage-efs.yml")
        os.remove(temp + "/cf-stacks/storage-efs-stack.yml")
        function_fs_configs = ""

    sed.find_replace(
        temp,
        "<?sqlite-env-vars>",
        sqlite_env_vars,
        exclude,
    )
    sed.find_replace(
        temp,
        "<?sqlite-configure-it-properties>",
        sqlite_configure_it_properties,
        exclude,
    )
    sed.find_replace(
        temp,
        "<?function-fs-configs>",
        function_fs_configs,
        exclude,
    )
